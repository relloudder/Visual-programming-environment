{test programs}

{циклы}

{Подсчитать сумму цифр  в десятичной записи целого неотрицательного числа k}

var
  k, sum, a: integer;

begin
  writeln('сумма цифр натурального числа');
  read(k);
  if k<=0 then writeln('error number ',k)
  else begin
    sum:=0;
    while k<>0 do begin
      a:=k mod 10;
      k:=k div 10;
      sum:=sum+a;
    end;
    writeln('sum= ',sum);
    end;
end.

{Получить число, полученное выписыванием в обратном порядке цифр целого неотрицательного числа k}

var
  k,n,a: integer;

begin
  writeln('число в обратном порядке');
  read(k);
  if k<=0 then writeln('error number ',k)
  else begin
    n:=0;
    while k<>0 do begin
      a:=k mod 10;
      k:=k div 10;
      n:=n*10+a;
    end;
    writeln('new n= ',n);
  end;
end.

{Вычислить значение n!}

var
  f: integer;
  n,i: integer;

begin
  read(n);
  if n<=0 then writeln ('number must be >0')
  else begin
    f:=1;
    for i:=2 to n do
      f:=f*i;
    writeln(n, '!=',f);
   end;
end.

{Дана последовательность чисел, заканчивающаяся 0. Найти среднее арифметическое этой последовательности}

var
  n: integer;
  sum, x :real;

begin
  read(x);
  sum:=0;
  n:=0;
  while x<>0 do begin
    sum:=sum+x;
    n:=n+1;
    read(x);
  end;
  if n=0 then writeln ('no number')
  else writeln('среднее арифметическое = ', sum/n);
end.

{Вычислить сумму n чисел}

var
  sum,x: integer;
  n,i:integer;
begin
  read(n);
  if n<=0 then writeln ('error ',n)
  else begin
    sum:=0;
    for i:=1 to n do begin
      read(x);
      sum:=sum+x;
    end;
    writeln('sum=',sum);
  end;
end.

{Дана последовательность из n вещественных чисел. Найти максимальное число из этой последовательности}

var
  x, max: real;
  n,i: integer;

begin
  read(n);
  if n<=0 then writeln('error number')
  else begin
    read(x);
    max:=x;
    for i:=2 to n do begin
      read(x);
      if x>max then max:=x;
    end;
    writeln('max=', max);
  end;
end.

{Подсчитать n-количество цифр в десятичной записи целого неотрицательного числа k}

var
  k,n:integer;

begin
  read(k);
  if k<=0 then writeln('error number ',k)
  else begin
    n:=0;
    while k<>0 do begin
      k:=k div 10;
      n:=n+1;
    end;
    writeln('count= ',n);
  end;
end.

{Определить,  является ли натуральное число k степенью 3}

var
k, i : integer;
p: real;

begin
  read(k);
  if k<=0 then writeln('error number ',k)
  else begin
    p:=k;
    i:=0;
    while p>1 do begin
      p:=p/3;
      i:=i+1;
    end;
    if p=1 then writeln('k= ',k, '=3^',i)
    else writeln('k= ',k , '<>3^x');
  end;
end.

{Даны целое n>0 и последовательность из n вещественных чисел. Найти величину наибольшего среди отрицательных чисел этой последовательности}

var
  i,n:integer;
  max,x:real;
  fl:boolean;

begin
  read(n);
  if n<=0 then writeln('error number ',n)
  else begin
    fl:=true; {признак того, что еще не было отрицательных}
    for i:=1 to n do begin
      read(x);
      {отрицательное число вводится первый раз}
      if (x<0) and (fl=true) then begin
        max:=x; {запоминаем максимум}
        fl:=false;{отрицательное число уже введено}
      end;
      {введено отрицательное число больше максимума и это не первое отрицательное число}
      if (x<0) and (fl=false) and (max<x) then max:=x;
    end;
    if (fl=true) then writeln ('all positive')
    else writeln('max= ',max);
  end;
end.

{Вычислить  y=x^10+2*x^9+3*x^8...+10*x+11; y=11*x^10+10*x^9+...+2*x+1}

var
  i: integer;
  x,y1,y,r:real;

begin
  writeln('y1=x^10+2*x^9+3*x^8...+10*x+11');
  writeln('y2=11*x^10+10*x^9+...+2*x+1');
  read(x);
  y:=0;
  y1:=0;
  r:=1;
  for i:=1 to 11 do begin
    {прибавляем степень х с соответствующим коэффициентом к сумме каждого ряда}
    y:=y+(11-i+1)*r;
    y1:=y1+i*r;
    r:=r*x; {очередная степень х}
  end;
  writeln('y1=',y, ' y2=',y1);
end.

{Дано натуральное число n. Получить все совершенные числа, меньшие n. Натуральное число называется совершенным, равно сумме всех своих делителей, за исключением самого себя}

var
  n,i,k,s,j:integer;

begin
  writeln('совершенные числа, меньшие n');
  read(n);
  if n<=0 then writeln('error ',n)
  else
    if n>10000 then writeln(n, ' – слишком большое')
    else
      for k:=1 to n do begin
        {находим сумму делителей числа k в переменной s}
        s:=0;
        for j:=1 to k-1 do
          if (k mod j)=0 then s:=s+j;
        if s=k then writeln(s);
      end;
end.

{Дана непустая последовательность различных натуральных чисел, за которой следует 0. Определить порядковый номер наименьшего из них}

var
  i,k:integer;
  x,min:real;

begin
  writeln('номер наименьшего числа последовательности');
  read(x);
  {считаем, что наименьшим является первое введенной число, и запоминаем его номер в переменной k}
  min:= x;
  k:=1;
  i:=1;
  while x<>0 do begin
    i:=i+1;
    read(x);
    if (x<min) and (x<>0)  then begin
      min:=x;
      k:=i; {запоминаем новый минимум и его номер}
    end;
  end;
  if (min=0) and (k=1) then writeln ('no number')
  else writeln('min= ',min,'k= ',k);
end.

{Написать программу нахождения наибольшего общего делителя (НОД) двух неотрицательных чисел}

var
  x, y, nod: integer;

begin
  read(x);
  read(y);
  if (x<=0) or (y<=0) then writeln ('error number')
  else begin
    repeat
      if x>y then x:=x mod y
      else y:=y mod x;
    until (x=0) or (y=0);
    nod:=x+y;
    writeln('нод=', nod);
  end;
end.

{Найти все простые несократимые дроби, заключенные между 0 и 1, знаменатели которых не превышают 7}

var
  i,j,nod,x,y:integer;

begin
  for i:=1 to 6 do
    {числитель меньше знаменателя}
    for j:=i+1 to 7 do begin
      x:=i;
      y:=j;
      {находим наибольший общий делитель чисел x и y}
      while x*y<>0 do begin
        if x>y then x:=x mod y
        else y:=y mod x;
      end;
      nod:=x+y;
      {если наибольший общий делитель чисел x и y равен 1, то соответствующая дробь - несократима}
      if nod=1 then write(i,'/',j,' ',);
    end;
end.

{Дана непустая последовательность различных натуральных чисел, за которой следует 0. Определить порядковый номер наименьшего из них.}

var
  i,k:integer;
  x,min:real;

begin
  writeln('номер наименьшего числа последовательности');
  read(x);
  {считаем, что наименьшим является первое введенной число, и запоминаем его номер в переменной k}
  min:= x;
  k:=1;
  i:=1;
  while x<>0 do begin
    i:=i+1;
    read(x);
    if (x<min) and (x<>0) then begin
         min:=x;
         k:=i; {запоминаем новый минимум и его номер}
    end;
  end;
  if (min=0) and (k=1) then writeln ('no number')
  else writeln('min= ',min,' k= ',k);
end.

{Найти все дружественные ему числа, меньшие n. Два натуральных числа называются дружественными, если каждое их них равно сумме всех делителей другого за исключением самого себя}

var
  i,n,p,k,j:integer;

begin
  writeln('дружественные числа');
  read(n);
  if n<=0 then writeln('error ',n)
  else
    for i:=1 to n do begin
      {сумма делителей числа i}
      p:=0;
      for j:=1 to i-1 do
        if (i mod j)=0 then p:=p+j;
          {сумма делителей меньше n}
          if p<n then begin
            {сумма делителей числа p}
            k:=0;
            for j:=1 to p-1 do
              if (p mod j)=0 then k:=k+j;
              {проверяем, равна ли сумма делителей числа p исходному числу n}
                if i=k then  writeln('k=',i, ' k1=',p);
          end;
    end;
end.

{Вычислить: сумм k=1 до 10 ((сумм n=1 до k (k*n))/k!)}

var
  s,s1,r: real;
  n,k:integer;

begin
  writeln('сумма ряда');
  s:=0;
  r:=1;
  for k:=1 to 10 do begin
    {вычисляем внутреннюю сумму}
    s1:=0;
    for n:=1 to k do
      s1:=s1+sin(k*n);
    r:=r/k; {вычисляем факториал в знаменателе}
    s:=s+s1*r;
  end;
  writeln('s=',s);
end.

{Напечатать в возрастающем порядке все трехзначные числа, в десятичной записи которых нет одинаковых цифр (деление не использовать)}

var
  i,j,k:integer;

begin
  write('числа, состоящие из разных цифр');
  for i:=1 to 9 do
    for j:=0 to 9 do
      for k:=0 to 9 do
        if (i<>j) and (i<>k) and (j<>k) then
          writeln(i*100+j*10+k, ' ');
end.

{Выяснить, можно или нет натуральное число n представить в виде суммы трех полных квадратов}

var
  n, x,y,z:integer;
  fl:boolean;

begin
  writeln('Представить n в виде трех полных квадратов');
  read(n);
  if n<=0 then writeln('error number ',n)
  else begin
    fl:=true;{предположим, что число представить нельзя}
    for x:=1 to n do
      for y:=x to n do
        for z:= y to n do
          if (x*x+y*y+z*z) = n then begin
            fl:=false; {число представить можно}
            writeln(n, '=',x, '^2+',y,'^2+',z, '^2');
          end;
    if fl=true then writeln('number is not sum sqr');
  end;
end.

{Даны n-натуральное и вещественные пары (x1,y1),...,(xn,yn). Определить радиус наименьшего круга с центром в начале координат, внутрь которого попадают эти точки}

var
  i,n:integer;
  max, x, y, r:real;

begin
  writeln('радиус наименьшего круга');
  read(n);
  if n<=0 then writeln('error number ',n)
  else begin
    max:=0;
    for i:=1 to n do begin
      read(x);
      read(y);
      r:= sqrt(x*x+y*y);
      if max<r then
        max:=r;
    end;
    writeln('max r=',max);
  end;
end.

{Дано 10 чисел. Определить, сколько из них принимает наибольшее значение}

var
  i,n:integer;
  x,max: real;

begin
  writeln('число чисел, принимающих максимальное значение');
  read(x);
  max:=x;
  n:=1;
  for i:=2 to 10 do begin
    read(x);
    if max=x then
      n:=n+1
    else if max<x then begin
      max:=x;
      n:=1;
    end;
  end;
  writeln('max= ',max, ' n=',n);
end.

{Дано не менее двух различных чисел, за которыми следует нуль. Определить два наибольших числа среди них}

var
  i: integer;
  x,max1,max2:real;
  fl:boolean;

begin
  writeln('2 max');
  read(max1);
  read(x);
  {если второе число больше первого, то max1 –второе число, max2 – первое число. В противном случае - наоборот}
  if x>max1 then begin
     max2:=max1;
     max1:= x;
  end
  else max2:=x;
  {по условию оба введенных числа не должны быть равными 0}
  if (max1=0) or (max2=0) then
    writeln('error, <2 number')
  else begin
    i:=2;
    while  x<>0 do begin
      i:=i+1;
      read(x);
      if  x>max1 then begin
        max2:=max1;
        max1:= x;
      end
      else
        if x>max2 then
          max2:=x;
    end;
    writeln('max1=',max1, ' max2=',max2);
  end;
end.

{Вычислить: sqrt(3+sqrt(6+...+sqrt(96+sqrt(99))))}

var
  sum:real;
  n,i:integer;

begin
  writeln('sqrt(3+sqrt(6+sqrt(9+...+sqrt(99)))');
  n:=99;
  sum:=0;
  for i:=1 to 33 do begin
    sum:=sqrt(sum+n);
    n:=n-3;
  end;
  writeln('y=',sum:8:6)
end.

{Дано n вещественных чисел. Определить, образуют ли они возрастающую последовательность}

var
  n,i: integer;
  x,a1:real;
  fl:boolean;

begin
  writeln('возрастающая последовательность');
  read(n);
  if n<=0 then writeln('error number ',n)
  else begin
    fl:=true; {предполагаем, что последовательность упорядоченная}
    read(а1);
    for i:=2 to n do begin
      read(x);
      if x<a1 then
      {очередное число нарушает упорядоченность}
        fl:=false
      else a1:=x;{запоминаем очередное число}
    end;
    if fl=true then
      writeln('sort')
    else writeln('no sort');
  end;
end.

{Вычислить y=sin(1)+sin(1.1)+...+sin(2)}

var
  sum:real;
  i:integer;

begin
  writeln('y=sin(1)+sin(1.1)+...+sin(2)');
  sum:=0;
  for i:=0 to 10 do
    sum:=sum+sin(1+0.1*i);
  writeln('y=',sum);
end.

{Подобрать всевозможные варианты размена произвольной >7 руб. суммы с помощью 3-х и 5-ти рублевых купюр}

var
  s,x,y:integer;

begin
  writeln('s=3x+5y');
  read(s);
  if s<8 then writeln('нельзя разменять ',s)
  else
    for x:=1 to s div 3 do
      for y:=i to s div 5 do
        if (x*3+y*5)=s then
          writeln(s, '=3*',x, '+5*',y);
end.

{Даны натуральные числа n и k вычислить: S= 1^k+2^k+...+n^k}

var
  k,n,s,i,j,r:integer;

begin
  writeln('sum=1^k+2^k+3^k+...+n^k');
  read(k);
  read(n);
  if (k<=0) or (n<=0) then writeln('error number ',k,' or ',n)
  else begin
    s:=0;
    for i:=1 to n do begin
      r:=1;
      {считаем очередной член ряда: i^k}
      for j:=1 to k do
        r:=r*i;
      s:=s+r;
    end;
    writeln('sum=',s);
  end;
end.

{Дано натуральное число n. Вычислить: S=1⋅2+2⋅3⋅4+...+n⋅ (n+1) ⋅...⋅ 2n}

var
  n,sum,i,j,r:integer;

begin
  writeln('s=1*2+2*3*4+...+n*(n+1)*...*2n');
  read(n);
  if n<=0 then writeln('error number ',n)
  else begin
    sum:=0;
    for i:=1 to n do begin
      r:=1;
      {находим произведение чисел от i до 2i}
      for j:=i to 2*i do
        r:=r*j;
      sum:=sum+r;
    end;
    writeln('sum=',sum);
  end;
end.

{Дано n вещественных чисел. Определить сколько из них больше своих «соседей», то есть предыдущего и последующего числа}

var
  i,n:integer;
  num,pred,sled,p:real;

begin
  writeln('количество чисел больших своих соседей');
  read(n);
  if n<=0 then writeln('error number ',n)
  else begin
    p:=0;
    for i:=1 to n do begin
     {читаем очередное число и заносим его в переменную sled}
      read(sled);
      if i=1 then
        {число – первое, запоминаем его как предыдущее}
        pred:=sled
      else
        if i=2 then
          {число – второе, запоминаем его как текущее}
          num:=sled
        else begin
          {сравниваем текущее число с предыдущим и следующим}
          if (num>pred) and (num>sled) then
            p:=p+1;
          {запоминаем предыдущее и текущее число для следующего сравнения}
          pred:=num;
          num:=sled;
        end;
    end;
    writeln('k=',p);
  end;
end.

{Дано натуральное число k. Можно ли его представить в виде суммы двух полных квадратов?}

var
  k, x, y:integer;
  fl:boolean;

begin
  writeln('Можно ли представить число k в виде суммы двух полных квадратов');
  read(k);
  if k<0 then writeln('error number ',k)
  else begin
    fl:=true;
    for x:=1 to k do
      for y:=x to k do
        if (x*x+y*y)=k then begin
          fl:=false;
          writeln(k, '=',x, '^2+',y, '^2');
        end;
    if fl=true then writeln('number is not sum sqr');
  end;

{Получить все числа Амстронга, состоящие из трех и четырех цифр. Натуральное число из n цифр является числом Амстронга, если сумма его цифр, возведенных в n-ю степень, равна самому числу (например 153=1^3+5^3+3^3)}

var
  k,sum,a,i,j:integer;

begin
  writeln('числа Амстронга, трех и четырехзначные');
  for i:=100 to 999 do begin
    k:=i;
    sum:=0;
    {разбиваем число на цифры и находим сумму их кубов}
    while k<>0 do begin
      a:=k mod 10;
      k:=k div 10;
      sum:=sum+a*a*a;
    end;
    if i=sum then
      writeln(i);
  end;
  for i:=1000 to 9999 do begin
    k:=i;
    sum:=0;
    while k<>0 do begin
      a:=k mod 10;
      k:=k div 10;
      sum:=sum+a*a*a*a;
    end;
    if i=sum then
      writeln(i);
  end;
end.

{Найти натуральное число от 1 до n с максимальной суммой делителей}

var
  i,n,p,max,j,k: integer;

begin
  writeln('число с наибольшим количеством делителей');
  read(n);
  if n<=0 then writeln('error number ',n)
  else begin
    max:=0;
    for i:=1 to n do begin
      p:=0;
      {находим p - сумму делителей числа i}
      for j:=1 to i do
        if (i mod j)=0 then
          p:=p+j;
        {число делителей p больше максимума}
        if p>max then begin
          max:=p;
          {запоминаем число i, у которого пока больше всех делителей}
          k:=i;
        end;
      end;
    writeln('k=',k, ' max=',max);
  end;
end.

{Найти все числа Пифагора, то есть натуральные решения уравнения n^2+m^2=k^2 в интервале [p,10p]. Решения, которые получаются перестановкой n и m, считать совпадающими}

var
  p,sum,a,n,m,k,i,j:integer;
  fl: boolean;

begin
  writeln('числа Пифагора в интервале от p до 10p');
  read(p);
  i:=1;
  j:=1;
  if p<0 then writeln('error number ',p)
  else begin
    fl:=true;
    for n:=p to 10*p do
      for m:=i to 10*p do
        for k:= j to 10*p do
          if (n*n+m*m=k*k) then begin
            fl:=false;
            writeln(n, '^2+',m, '^2=',k, '^2');
          end;
    if fl=true then
      writeln('no number in [', p, ',', 10*p, ']');
  end;
end.

{Дано натуральное число k. Можно ли его представить в виде суммы двух простых чисел?}

var
  k, code,sum,a,i,j,i1:integer;
  fl,fl1:boolean;

begin
  writeln('Можно ли представить число в виде суммы двух простых чисел');
  read(k);
  if k<0 then writeln('error number ',k)
  else begin
    fl1:=false;
    for i:=2 to (k div 2)+1 do begin
      fl:=false;
      i1:=1;
      repeat
        i1:=i1+1;
      until (i mod i1)=0;
      if i1=i then fl:=true;
      j:=k-i;
      i1:=1;
      repeat
        i1:=i1+1;
      until (j mod i1)=0;
      if (i1=j) and (fl=true) then begin
        fl1:=true;
        writeln(k, '=',i, '+',j);
      end;
    end;
    if (fl1=false) then writeln('number is not sum of simple');
  end;
end.

{Подсчитать произведение цифр  в десятичной записи целого неотрицательного числа k}

var
  k, mult,a:integer;

begin
  writeln('Найти  произведение цифр натурального числа');
  read(k);
  if k<=0 then writeln('error number ',k)
  else begin
    mult:=1;
    while k<>0 do begin
      a:=k mod 10;
      k:=k div 10;
      mult:=mult*a;
    end;
    writeln('mult= ',mult);
  end;
end.

{Вычислить s-сумму всех чисел Фибоначчи, которые не превосходят 1000.  Числа Фибоначчи  u1, u2, ...,un вычисляются по формулам: u0=0, u1=1, uk=uk-1+uk-2}

var
  a1,a2,sum,a: integer;

begin
  writeln('The sum of the fibonacci sequence not exceed n');
  a1:=0;
  a2:=1;
  sum:=a1+a2;
  write(a1, ' ',a2, ' ');
  while a<n do begin
    a:=a1+a2;
    if a<1000 then begin
      write(a,' ');
      sum:=sum+a;
    end;
    a1:=a2;
    a2:=a;
  end;
  writeln('sum=',sum);
end.

{Найти все автоморфные числа, принадлежащие отрезку [n,m]. Автоморфным называется целое число, которое равно последним числам своего квадрата. Например: 25^2=625}

var
  n,m,i,k,p,a,a1:integer;
  fl,yes:boolean;

begin
  read(m);
  read(n);
  if (n<=0) or (m<=0) or (n<m) then
    writeln('error ',m, ' or ',n)
  else begin
    yes:=false;
    for i:=m to n do begin
      fl:=true;
      k:=i;
      p:=i*i;
      while k<>0 do begin
        a:=k mod 10;
        a1:=p mod 10;
        if a<>a1 then
          fl:=false;
        k:=k div 10;
        p:=p div 10;
      end;
      if (fl=true) then begin
        yes:=true;
        writeln(i, '^2=',i*i);
      end;
    end;
    if (yes=false) then
      writeln('no number in [',m, ',', n, ']');
  end;
end.

{Пусть дан прямоугольник, длины сторон которого a и b – натуральные числа. На сколько квадратов, стороны которого выражены натуральными числами, можно разрезать данный прямоугольник, если от него каждый раз отрезать квадрат максимально возможной площади?}

var
  a,b,n:integer;

begin
  read(a);
  read(b);
  if (a<=0) or (b<=0) then
    writeln('error ',a,' or ',b)
  else begin
    n:=0;
    repeat
      n:=n+1;
      if a>b then a:=a-b
      else b:=b-a;
    until a*b=0;
    writeln('n=',n);
  end;
end.

{Напишите программу для вычисления корня n-ой степени из положительного числа a, пользуясь последовательными приближениями Xk-1=(n-1)/n*Xk+a/(n*Xk^(n-1)) k=0,1,2,3… до совпадений с точностью e, если задано начальное приближение x0=1}

var
  x,e,a,x0,p:real;
  n,i:integer;

begin
  read(a);
  read(n);
  read(e);
  if (a<=0) or (n<=0) or (e<=0) then writeln('error input')
  else begin
    x:=1;
    repeat
      x0:=x;
      p:=1;
      for i:=1 to n-1 do
        p:=p/x0;
      x:=(n-1)/n*x0+a/n*p;
    until abs(x0-x)<=e;
    writeln(a, '^1/',n, '=',x);
  end;
end.

{Каждая бактерия делится на две в течение одной минуты. В начальный момент времени имеется 1 бактерия. Составьте программу для расчета количества бактерий через целое количество минут n}

var
  n,k,i:integer;

begin
  read(n);
  if n<=0 then writeln('error ',n)
  else begin
    k:=1;
    for i:=1 to n do
      k:=k*2;
    writeln('k=',k);
  end;
end.

{Выведите таблицу значений функции y=f(x). Таблица должна иметь две колонки: в первую заносятся значения xi,  а во вторую - yi.
f(x)=(x^2-3x+2)/sqrt(2x^3-1), xi=1+i*h, i=0,1,2,..,n
h, n – вводятся с клавиатуры}

var
  y,x,h:real;
  n,i:integer;

begin
  read(n);
  read(h);
  if n<=0 then writeln('error ',n)
  else begin
    writeln('----------------------');
    writeln('|  xi   |    f(xi)   |');
    writeln('----------------------');
    for i:=0 to n do begin
      x:=1+i*h;
      if (2*x*x*x-1)>0 then begin
        y:=(x*x-3*x+2)/sqrt(2*x*x*x-1);
        writeln('|',x, '|', y, '|');
      end
      else writeln('|',x, '|    error   |');
    end;
    writeln('----------------------');
  end;
end.

{Выведите таблицу значений функции y=f(x). Таблица должна иметь две колонки: в первую заносятся значения xi,  а во вторую - yi.
f(x)=cos(sqrt(2)*x), xi=a+(b-a)/n*i, i=0,1,2..n
n, a, b – вводятся с клавиатуры}

var
  y,x,a,b:real;
  n,i:integer;

begin
  read(n);
  read(a);
  read(b);
  if n<=0 then writeln('error ',n)
  else begin
    writeln('----------------------');
    writeln('|  xi   |    f(xi)   |');
    writeln('----------------------');
    for i:=0 to n do begin
      x:=a+(b-a)/n*i;
      y:=cos(sqrt(2)*x);
      writeln('|',x, '|', y, '|');
    end;
    writeln('----------------------');
  end;
end.

{Пусть дано натуральное число n. Выбросите из записи этого числа цифры 3 и 7, оставив прежним порядок следования цифр. Например, из числа 3 432 7887 должно получиться 4 288}

var
  n,a,k,s:integer;

begin
  read(n);
  if n<=0 then writeln('error ',n)
  else begin
    k:=0;
    s:=1;
    while n>0 do begin
      a:=n mod 10;
      n:=n div 10;
      if (a<>7) and (a<>3) then begin
        k:=a*s+k;
        s:=s*10;
      end;
    end;
    writeln('new k=',k);
  end;
end.

{Пусть дано целое число m>1. Получите наибольшее целое k, при котором 4^k<m.}

var
  m,k,p:integer;

begin
  read(m);
  if m<=1 then writeln('error ',m)
  else begin
    p:=1;
    k:=0;
    while p<m do begin
      p:=p*4;
      k:=k+1;
    end;
    writeln('k=',k-1, ': 4^',(k-1), '=',p div 4,' < ',m);
  end;
end.

{Определить, является ли целое неотрицательное число симметричным}

var
  s:string;
  k, code,sum,a,i:integer;
  fl:boolean;

begin
  writeln('определить, является ли число симметричным');
  read(s);
  fl:=true;
  for i:=1 to length(s) div 2 do
    if s[i]<>s[length(s)+1-i] then
      fl:=false;
  if fl=true then
    writeln(s, ' - simmetr')
  else writeln(s, ' - no simmetr');
end.

{массивы}

{Ввести с клавиатуры массив A и вывести его на экран в одну строку}

var
  a:array [1..10] of real;
  n,i:integer;

begin
  read(n);
  if (n<=0) or (n>10) then writeln('error ', n)
  else begin
    for i:=1 to n do
      read(a[i]);
    for i:=1 to n do
      write(a[i]);
  end;
end.

{Заполнить массив A целыми случайными числами в интервале от x до y, массив B вещественными числами (после запятой 2 знака) в том же интервале}

var
  a:array [1..5] of integer;
  b:array [1..5] of real;
  n,i,x,y:integer;

begin
  read(n);
  read(x);
  read(y);
  if (n<=0) or (n>5) then writeln('error ', n)
  else if x>y then writeln('error ', x,' or ',y)
  else begin
    for i:=1 to n do
      a[i]:=x+random(y-x+1);
    for i:=1 to n do
      b[i]:=x+random((y-x+1)*100)/100;
    writeln('a:');
    for i:=1 to n do
      write(a[i], ' ');
    writeln('b:');
    for i:=1 to n do
      write(b[i], ' ');
  end;
end.

{Найти максимальный элемент в массиве A}

var
  a:array [1..5] of real;
  n,i:integer;
  max:real;

begin
  read(n);
  if (n<=0) or (n>5) then writeln('error ', n)
  else begin
    for i:=1 to n do
      read(a[i]);
    max:= a[1];
    for i:=2 to n do
      if max<a[i] then
        max:=a[i];
    writeln('max=',max);
  end;
end.

{Найти максимальный элемент в массиве A и его место в массиве}

var
  a:array [1..5] of real;
  n,i,k:integer;
  max:real;

begin
  read(n);
  if (n<=0) or (n>5) then writeln('error ', n)
  else begin
    for i:=1 to n do
      read(a[i]);
    max:=a[1];
    k:=1;
    for i:=2 to n do
      if max<a[i] then begin
        max:=a[i];
        k:=i;
      end;
    writeln('max=',max,' k=',k);
  end;
end.

---еще нет в дипломе----

{Найти сумму элементов массива A}

var
  a:array [1..5] of real;
  n,i:integer;
  sum:real;

begin
  read(n);
  if (n<=0) or (n>5) then writeln('error ', n)
  else begin
    for i:=1 to n do
      read(a[i]);
    sum:=0;
    for i:=1 to n do
      sum:=sum+a[i];
    writeln('sum=',sum);
  end;
end.

{Найти скалярное произведение двух векторов одинаковой размерности}

var
  a,b:array [1..5] of real;
  n,i:integer;
  scl:real;

begin
  read(n);
  if (n<=0) or (n>5) then writeln('error ', n)
  else begin
    for i:=1 to n do
      read(a[i]);
    for i:=1 to n do
      read(b[i]);
    scl:=0;
    for i:=1 to n do
      scl:=scl+a[i]*b[i];
    writeln('scl=',scl);
  end;
end.

{Удалить из массива А элемент с номером k}

var
  a:array [1..5] of real;
  n,i,k,j:integer;

begin
  read(n);
  for i:=1 to n do
    read(a[i]);
  read(k);
  if (k<=0) or (k>n) then writeln('error ',k)
  else begin
    {сдвигаем эл. массива на одну позицию влево, начиная с k-го элемента}
    for j:=k to n-1 do
      a[j]:=a[j+1];
    n:=n-1;
    {вывод элементов массива}
    write('new A ');
    for i:=1 to n do
      write(a[i]);
  end;
end.

{Вставить в массив А новый элемент, например 0, после элемента с номером k}

var
  a:array [1..5] of real;
  n,i,j,k:integer;

begin
  read(n);
  for i:=1 to n do
    read(a[i]);
  read(k);
  if (k<=0) or (k>n) then writeln('error ',k)
  else begin
    for j:=n downto k+1 do
      a[j+1]:=a[j];
    n:=n+1;  {увеличиваем фактическую границу массива}
    a[k+1]:=0; {вставляем новый элемент}
    write('new A ');
    for i:=1 to n do
      write(a[i]);
  end;
end.

{Преобразовать массив X по следующему правилу (x`(k) - значение k-го элемента массива после преобразования): x`(k) = max(x(i)), при 1 ≤ i ≤ k}

var
  x:array [1..5] of real;
  n,i:integer;
  max:real;

begin
  read(n);
  for i:=1 to n do
    read(x[i]);
  max:=x[1];
  for i:=2 to n do begin
    {ищем максимум среди первых i элементов массива}
    if x[i]>max then max:=x[i];
    x[i]:=max;
  end;
  writeln('new X ');
  for i:=1 to n do
     write(x[i]);
end.

{Элементы массива расположить в обратном порядке}

var
  a:array [1..5] of real;
  n,i:integer;
  t:real;

begin
  read(n);
  for i:=1 to n do
    read(a[i]);
  for i:=1 to n div 2 do begin
    t:=a[i];
    a[i]:=a[n+1-i];
    a[n+1-i]:=t;
  end;
  writeln('new A ');
  for i:=1 to n do
     write(a[i]);
end.

{Дано два целочисленных массива M и N, размерностью 10. Элементами обоих массивов являются цифры.  Вещественной переменной присвоить вещественное число, целая часть которого получена из элементов первого массива, а дробная - из элементов второго: m1m2...m10.n1n2...n10}

var
  n,m:array [1..5] of integer;
  i:integer;
  r,r1,d:real;

begin
  for i:=1 to 5 do
    read(m[i]);
  for i:=1 to 5 do
    read(n[i]);
  r:=0;
  r1:=0;
  d:=1;
  for i:=1 to 5 do begin
    r:=r*10+m[i];{формируем целую часть числа}
    d:=d/10;
    r1:=r1+n[i]*d;{формируем дробную часть числа}
  end;
  writeln('r=',r, '+',r1);
end.

{Дано натуральное k. Сколько различных цифр встречается в его записи?}

var
  k, j, b,m:integer;
  a: array [1..5] of integer;

begin
  read(k);
  if k<=0 then writeln('Error ',k)
  else begin
    m:=0;
    while k<>0 do begin
      b:=k mod 10;
      k:=k div 10;
      a[m+1]:=b;
      {проверяем с помощью поиска со сторожем, занесена ли уже очередная цифра в массив}
      j:=1;
      while a[j]<>b do j:=j+1;
      if j=(m+1) {цифра новая}
        then m:=m+1;{увеличиваем размер массива А, то есть сохраняем неповторяющуюся цифру в массиве}
    end;
    writeln('count= ',m);
    writeln('different ');
    for j:=1 to m do
      write(a[j], ' ');
  end;
end.

{Даны две последовательности по n целых чисел в каждой. Найти наименьшее среди тех чисел первой последовательности, которые не входят во вторую}

var
  a,b: array [1..5] of integer;
  i,j,n,min:integer;
  fl:boolean;

begin
  read(n);
  for i:=1 to n do
    read(a[i]);
  for i:=1 to n do
    read(b[i]);
  fl:=true;{в переменной минимум ничего не занесено}
  for i:=1 to n do begin
      {проверяем, есть ли очередной элемент массива А в массиве В}
      b[n+1]:=a[i];
      j:=1;
      while b[j]<> a[i] do j:=j+1;
      if j=(n+1) then
        {такого элемента в массиве В нет и нужно искать минимум}
        if fl=true then begin
          {значение в переменной min формируется в первый раз }
            fl:=false;
            min:=a[i];
        end
        else if a[i]<min then min:=a[i];
  end;
  if fl=true then writeln('no number')
  else writeln('min=',min);
end.

{Найти заданный элемент в массиве А}

var
  a: array [1..5] of integer;
  j,n,x,i: integer;

begin
  read(n);
  for i:=1 to n do
    read(a[i]);
  read(x);
  {заносим искомый элемент после последнего элемента массива А}
  a[n+1]:=x;
  {ищем X в массиве}
  j:=1;
  while a[j]<> x do
    j:=j+1;
  if j=(n+1) then
    writeln('элемент ',x,' не найден')
  else writeln('элемент ',x,' найден на ',j, 'месте ');
end.

{Отсортировать массив А по возрастанию методом «пузырька»}

var
  a: array [1..5] of real;
  i,k,n: integer;
  wp:real;

begin
  read(n);
  for i:=1 to n do
    read(a[i]);
  for i:=1 to n-1 do
     for k:=1 to n-i do
       if a[k]>a[k+1] then begin
          wp:=a[k+1];
          a[k+1]:=a[k];
          a[k]:=wp;
        end;
  writeln('new array : ');
  for i:=1 to n do
    write(a[i]);
end.

{Отсортировать массив А по возрастанию методом перестановки}

var
  a: array [1..5] of real;
  i,k,j,n: integer;
  min:real;

begin
  read(n);
  for i:=1 to n do
    read(a[i]);
  for i:=1 to n-1 do begin
      min:=a[i];
      k:=i; {фиксируем место в массиве, начиная с которого будем искать минимальный элемент }
      for j:=i to n do
        if a[j]>min then begin
          min:=a[j];
          k:=j; {  фиксируем место нового min }
        end;
      {меняем местами очередной и минимальный элементы }
      a[k]:=a[i];
      a[i]:=min;
    end;
  writeln('new array: ');
  for i:=1 to n do
    write(a[i]);
end.






------------------------------

{на мастер-классе}

{Найти максимум из двух чисел}
Var
  a, b, max : integer;
begin
    read(a, b);
    if a>b then max := a
    else max := b;
    write(max);
end.

{Найти максимум из трех чисел}
Var
  a, b, c, max : integer;
begin
    read(a, b, c);
    max:=a;
    if b>max then max := b;
    if c > max then max := c;
    write(max);
end.

{найти сумму цифр трехзначного числа}
Var
    a, cif,sum : integer;
begin
    read(a);
    cif:=a mod 10;
    a := a div 10;
    sum := sum+cif;
    cif := a mod 10;
    a := a div 10;
    sum := sum+cif+a;
    write(sum);
end.
  
{найти сумму цифр целого числа}
var
    num, x, sum, dig : integer;
begin
    read(num);
    x:=num;
    while x>0 do begin
        dig := x mod 10;
        x:=x div 10;
        sum:= sum+dig;
    end;
     write ('num=', num,'  sum=',sum);
end.

{найти наибольший общий делитель двух чисел, алгоритм Эвклида}
var
    y, x, num1, num2, nod: integer;
begin
    read(num1,num2);
    x:=num1;
    y:=num2;
    while x*y >0 do begin
        if x>y then 
            x:= x mod y
        else
          y:=y mod x;
    end;
    nod :=x+y;
    write ('num1=', num1,'  num2=',num2,'   nod =',x+y);
end.

{определяет, простое число или составное}
var
  num, k: integer;
   s: string;
begin
    read(num);
   k:=2;
    while (num mod k <>0) do 
        k:=k+1;
    if k = num then
       s:='simple'
    else
      s:='composite';
	writeln (num,' -',s,' number');
end.
        
		
{вывести все числа фибоначчи, сумма которых не превышает n}		
var
   	num0, num1, num, sum, n: integer; 
begin
    read(n);
    num1:=1;
    num:=num0+num1;
    while (sum< n) do begin
	  write(num,' '); 
          num:=num0+num1;
           num0:=num1;
           num1 :=num;
           sum:=sum+num;
	end;
    sum:=sum - num;
end.

{Напечатать все делители числа}    
var
  num, k: integer;
   s: string;
begin
    read(num);
   k:=1;
    while (num <> k) do begin
      if num mod k =0 then
          write(k,' ');
        k:=k+1;
    end;
end.	

{массив в обратном порядке}
var 
    a: array [1..9] of integer;
	i, work, n: integer;
begin
    read(n);
   for i:=1 to n do begin
         a[i]:=random(60);
         write(a[i],'   ');
   end;
   writeln('new aray   ');
 for i:=1 to  n div 2 do begin
      work:=a[i];
      a[i]:=a[n+1-i];
      a[n+1-i]:=work;
end;
 for i:=1 to n do 
      write(a[i],'   ');
end.

{сортировка пузырьком}
var 
    a: array [1..9] of integer;
	i, work, n, k: integer;
   
begin
    read(n);
   for i:=1 to n do 
	a[i]:=random(60);
   
  for i:=1 to  n  do 
     for k:=1 to n-i do 
        if a[k]>a[k+1] then begin
	   work:=a[k];
	   a[k]:=a[k+1];
	   a[k+1]:=work;
	end;

  for i:=1 to n do 
      write(a[i],'   ');
	
end.
