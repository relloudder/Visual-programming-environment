{test programs}

{Подсчитать сумму цифр  в десятичной записи целого неотрицательного числа k}

var
  k, sum, a: integer;

begin
  writeln('сумма цифр натурального числа');
  read(k);
  if k<=0 then writeln('error number ',k)
  else begin
    sum:=0;
    while k<>0 do begin
      a:=k mod 10;
      k:=k div 10;
      sum:=sum+a;
    end;
    writeln('sum= ',sum);
    end;
end.

{Получить число, полученное выписыванием в обратном порядке цифр  целого неотрицательного числа k}

var
  k,n,a: integer;

begin
  writeln('число в обратном порядке');
  read(k);
  if k<=0 then writeln('error number ',k)
  else begin
    n:=0;
    while k<>0 do begin
      a:=k mod 10;
      k:=k div 10;
      n:=n*10+a;
    end;
    writeln('new n= ',n);
  end;
end.

{Вычислить значение n!}

var
  f: integer;
  n,i: integer;

begin
  read(n);
  if n<=0 then writeln ('error ',n)
  else begin
    f:=1;
    for i:=2 to n do
      f:=f*i;
    writeln(n, '!=',f);
   end;
end.

{Дана последовательность чисел, заканчивающаяся 0. Найти среднее арифметическое этой последовательности}

var
  n: integer;
  sum, x :real;

begin
  read(x);
  sum:=0;
  n:=0;
  while x<>0 do begin
    sum:=sum+x;
    n:=n+1;
    read(x);
  end;
  if n=0 then writeln ('no number')
  else writeln('среднее арифметическое = ', sum/n);
end.

{Вычислить сумму n чисел}

var
  sum,x: integer;
  n,i:integer;
begin
  read(n);
  if n<=0 then writeln ('error ',n)
  else begin
    sum:=0;
    for i:=1 to n do begin
      read(x);
      sum:=sum+x;
    end;
    writeln('sum=',sum);
  end;
end.

{Дана последовательность из n вещественных чисел. Найти максимальное число из этой последовательности}

var
  x, max: real;
  n,i: integer;

begin
  read(n);
  if n<=0 then writeln('error number')
  else begin
    read(x);
    max:=x;
    for i:=2 to n do begin
      read(x);
      if x>max then max:=x;
    end;
    writeln('max=', max);
  end;
end.

{Подсчитать n-количество цифр в десятичной записи целого неотрицательного числа k}

var
  k,n:integer;

begin
  read(k);
  if k<=0 then writeln('error number ',k)
  else begin
    n:=0;
    while k<>0 do begin
      k:=k div 10;
      n:=n+1;
    end;
    writeln('count= ',n);
  end;
end.

{Определить,  является ли натуральное число k степенью 3}

var
k, i : integer;
p: real;

begin
  read(k);
  if k<=0 then writeln('error number ',k)
  else begin
    p:=k;
    i:=0;
    while p>1 do begin
      p:=p/3;
      i:=i+1;
    end;
    if p=1 then writeln('k= ',k, '=3^',i)
    else writeln('k= ',k , '<>3^x');
  end;
end.

{Даны целое n>0 и последовательность из n вещественных чисел. Найти величину наибольшего среди отрицательных чисел этой последовательности}

var
  i,n:integer;
  max,x:real;
  fl:boolean;

begin
  read(n);
  if n<=0 then writeln('error number ',n)
  else begin
    fl:=true; {признак того, что еще не было отрицательных}
    for i:=1 to n do begin
      read(x);
      {отрицательное число вводится первый раз}
      if (x<0) and (fl=true) then begin
        max:=x; {запоминаем максимум}
        fl:=false;{отрицательное число уже введено}
      end;
      {введено отрицательное число больше максимума и это не первое отрицательное число}
      if (x<0) and (fl=false) and (max<x) then max:=x;
    end;
    if (fl=true) then writeln ('all positive')
    else writeln('max= ',max);
  end;
end.

{Вычислить  y=x^10+2*x^9+3*x^8...+10*x+11; y=11*x^10+10*x^9+...+2*x+1}

var
  i: integer;
  x,y1,y,r:real;

begin
  writeln('y1=x^10+2*x^9+3*x^8...+10*x+11');
  writeln('y2=11*x^10+10*x^9+...+2*x+1');
  read(x);
  y:=0;
  y1:=0;
  r:=1;
  for i:=1 to 11 do begin
    {прибавляем степень х с соответствующим коэффициентом к сумме каждого ряда}
    y:=y+(11-i+1)*r;
    y1:=y1+i*r;
    r:=r*x; {очередная степень х}
  end;
  writeln('y1=',y, ' y2=',y1);
end.

{Дано натуральное число n. Получить все совершенные числа, меньшие n. Натуральное число называется совершенным, равно сумме всех своих делителей, за исключением самого себя}

var
  n,i,k,s,j:integer;

begin
  writeln('совершенные числа, меньшие n');
  read(n);
  if n<=0 then writeln('error ',n)
  else
    if n>10000 then writeln(n, ' – слишком большое')
    else
      for k:=1 to n do begin
        {находим сумму делителей числа k в переменной s}
        s:=0;
        for j:=1 to k-1 do
          if (k mod j)=0 then s:=s+j;
        if s=k then writeln(s);
      end;
end.

{Дана непустая последовательность различных натуральных чисел, за которой следует 0. Определить порядковый номер наименьшего из них}

var
  i,k:integer;
  x,min:real;

begin
  writeln('номер наименьшего числа последовательности');
  read(x);
  {считаем, что наименьшим является первое введенной число, и запоминаем его номер в переменной k}
  min:= x;
  k:=1;
  i:=1;
  while x<>0 do begin
    i:=i+1;
    read(x);
    if (x<min) and (x<>0)  then begin
      min:=x;
      k:=i; {запоминаем новый минимум и его номер}
    end;
  end;
  if (min=0) and (k=1) then writeln ('no number')
  else writeln('min= ',min,'k= ',k);
end.

{Написать программу нахождения наибольшего общего делителя (НОД) двух неотрицательных чисел}

var
  x, y, nod: integer;

begin
  read(x);
  read(y);
  if (x<=0) or (y<=0) then writeln ('error number')
  else begin
    repeat
      if x>y then x:=x mod y
      else y:=y mod x;
    until (x=0) or (y=0);
    nod:=x+y;
    writeln('нод=', nod);
  end;
end.

{Найти все простые несократимые дроби, заключенные между 0 и 1, знаменатели которых не превышают 7}

var
  i,j,nod,x,y:integer;

begin
  for i:=1 to 6 do
    {числитель меньше знаменателя}
    for j:=i+1 to 7 do begin
      x:=i;
      y:=j;
      {находим наибольший общий делитель чисел x и y}
      while x*y<>0 do begin
        if x>y then x:=x mod y
        else y:=y mod x;
      end;
      nod:=x+y;
      {если наибольший общий делитель чисел x и y равен 1, то соответствующая дробь - несократима}
      if nod=1 then write(i,'/',j,' ',);
    end;
end.

{Дана непустая последовательность различных натуральных чисел, за которой следует 0. Определить порядковый номер наименьшего из них.}

var
  i,k:integer;
  x,min:real;

begin
  writeln('номер наименьшего числа последовательности');
  read(x);
  {считаем, что наименьшим является первое введенной число, и запоминаем его номер в переменной k}
  min:= x;
  k:=1;
  i:=1;
  while x<>0 do begin
    i:=i+1;
    read(x);
    if (x<min) and (x<>0) then begin
         min:=x;
         k:=i; {запоминаем новый минимум и его номер}
    end;
  end;
  if (min=0) and (k=1) then writeln ('no number')
  else writeln('min= ',min,' k= ',k);
end.

{Найти все дружественные ему числа, меньшие n. Два натуральных числа называются дружественными, если каждое их них равно сумме всех делителей другого за исключением самого себя}

var
  i,n,p,k,j:integer;

begin
  writeln('дружественные числа');
  read(n);
  if n<=0 then writeln('error ',n)
  else
    for i:=1 to n do begin
      {сумма делителей числа i}
      p:=0;
      for j:=1 to i-1 do
        if (i mod j)=0 then p:=p+j;
          {сумма делителей меньше n}
          if p<n then begin
            {сумма делителей числа p}
            k:=0;
            for j:=1 to p-1 do
              if (p mod j)=0 then k:=k+j;
              {проверяем, равна ли сумма делителей числа p исходному числу n}
                if i=k then  writeln('k=',i, ' k1=',p);
          end;
    end;
end.

{Вычислить: сумм k=1 до 10 ((сумм n=1 до k (k*n))/k!)}

var
  s,s1,r: real;
  n,k:integer;

begin
  writeln('сумма ряда');
  s:=0;
  r:=1;
  for k:=1 to 10 do begin
    {вычисляем внутреннюю сумму}
    s1:=0;
    for n:=1 to k do
      s1:=s1+sin(k*n);
    r:=r/k; {вычисляем факториал в знаменателе}
    s:=s+s1*r;
  end;
  writeln('s=',s);
end.


------------------------------

{Найти максимум из двух чисел}
Var
  a, b, max : integer;
begin
    read(a, b);
    if a>b then max := a
    else max := b;
    write(max);
end.

{Найти максимум из трех чисел}
Var
  a, b, c, max : integer;
begin
    read(a, b, c);
    max:=a;
    if b>max then max := b;
    if c > max then max := c;
    write(max);
end.

{найти сумму цифр трехзначного числа}
Var
    a, cif,sum : integer;
begin
    read(a);
    cif:=a mod 10;
    a := a div 10;
    sum := sum+cif;
    cif := a mod 10;
    a := a div 10;
    sum := sum+cif+a;
    write(sum);
end.
  
{найти сумму цифр целого числа}
var
    num, x, sum, dig : integer;
begin
    read(num);
    x:=num;
    while x>0 do begin
        dig := x mod 10;
        x:=x div 10;
        sum:= sum+dig;
    end;
     write ('num=', num,'  sum=',sum);
end.

{найти наибольший общий делитель двух чисел, алгоритм Эвклида}
var
    y, x, num1, num2, nod: integer;
begin
    read(num1,num2);
    x:=num1;
    y:=num2;
    while x*y >0 do begin
        if x>y then 
            x:= x mod y
        else
          y:=y mod x;
    end;
    nod :=x+y;
    write ('num1=', num1,'  num2=',num2,'   nod =',x+y);
end.

{определяет, простое число или составное}
var
  num, k: integer;
   s: string;
begin
    read(num);
   k:=2;
    while (num mod k <>0) do 
        k:=k+1;
    if k = num then
       s:='simple'
    else
      s:='composite';
	writeln (num,' -',s,' number');
end.
        
		
{вывести все числа фибоначчи, сумма которых не превышает n}		
var
   	num0, num1, num, sum, n: integer; 
begin
    read(n);
    num1:=1;
    num:=num0+num1;
    while (sum< n) do begin
	  write(num,' '); 
          num:=num0+num1;
           num0:=num1;
           num1 :=num;
           sum:=sum+num;
	end;
    sum:=sum - num;
end.

{Напечатать все делители числа}    
var
  num, k: integer;
   s: string;
begin
    read(num);
   k:=1;
    while (num <> k) do begin
      if num mod k =0 then
          write(k,' ');
        k:=k+1;
    end;
end.	

{массив в обратном порядке}
var 
    a: array [1..9] of integer;
	i, work, n: integer;
begin
    read(n);
   for i:=1 to n do begin
         a[i]:=random(60);
         write(a[i],'   ');
   end;
   writeln('new aray   ');
 for i:=1 to  n div 2 do begin
      work:=a[i];
      a[i]:=a[n+1-i];
      a[n+1-i]:=work;
end;
 for i:=1 to n do 
      write(a[i],'   ');
end.

{сортировка пузырьком}
var 
    a: array [1..9] of integer;
	i, work, n, k: integer;
   
begin
    read(n);
   for i:=1 to n do 
	a[i]:=random(60);
   
  for i:=1 to  n  do 
     for k:=1 to n-i do 
        if a[k]>a[k+1] then begin
	   work:=a[k];
	   a[k]:=a[k+1];
	   a[k+1]:=work;
	end;

  for i:=1 to n do 
      write(a[i],'   ');
	
end.
